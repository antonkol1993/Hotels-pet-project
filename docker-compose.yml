version: '3.8'

volumes:
  grafana-data:
  m2-volume:
  es-data:


services:

  api-app:
    build:
      context: .               # Путь к папке с Dockerfile твоего Spring Boot приложения
      dockerfile: Dockerfile   # Имя Dockerfile (если отличается - поправь)
    image: api-app:latest  # Можно оставить для тега образа
    ports:
      - "8092:8092"
    environment:
      SPRING_PROFILES_ACTIVE: test   # если используешь профили (необязательно)
    volumes:
      - m2-volume:/root/.m2
      - ./logs:/app/logs


  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./src/main/resources/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - api-app

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SMTP_USER: ${GF_SMTP_USER}
      GF_SMTP_PASSWORD: ${GF_SMTP_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./config/grafana-config/grafana.ini:/etc/grafana/grafana.ini:ro   # монтируем конфиг внутрь контейнера
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.0
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/app/logs
    depends_on:
      - elasticsearch
